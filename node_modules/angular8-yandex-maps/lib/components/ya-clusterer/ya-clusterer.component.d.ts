import { AfterContentInit, EventEmitter, NgZone, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import { Observable } from 'rxjs';
import { YaEvent } from '../../interfaces/ya-event';
import { YaReadyEvent } from '../../interfaces/ya-ready-event';
import { YaMapComponent } from '../ya-map/ya-map.component';
import * as i0 from "@angular/core";
/**
 * The `ya-clusterer` component wraps `ymaps.Clusterer` class from the Yandex.Maps API.
 * You can configure it via the component's inputs.
 * Events can be bound using the outputs of the component.
 *
 * <example-url>https://stackblitz.com/edit/placemark-clusterer?embed=1&view=preview</example-url>
 *
 * ```html
 * <ya-map [center]="[55.761952, 37.620739]">
 *   <ya-clusterer [options]="{ minClusterSize: 5 }">
 *     <ya-placemark [geometry]="[55.74, 37.5]"></ya-placemark>
 *     <ya-placemark [geometry]="[55.64, 37.46]"></ya-placemark>
 *     <ya-placemark [geometry]="[55.75, 37.38]"></ya-placemark>
 *
 *     <ya-geoobject
 *       [feature]="{ geometry: { type: 'Point', coordinates: [55.81, 37.4] } }"
 *      ></ya-geoobject>
 *
 *     <ya-geoobject
 *       [feature]="{ geometry: { type: 'Point', coordinates: [55.7, 37.39] } }"
 *      ></ya-geoobject>
 *   </ya-clusterer>
 * </ya-map>
 * ```
 */
export declare class YaClustererComponent implements AfterContentInit, OnChanges, OnDestroy {
    private readonly ngZone;
    private readonly yaMapComponent;
    private readonly placemarks;
    private readonly geoObjects;
    private readonly destroy$;
    private readonly eventManager;
    private clusterer?;
    /**
     * Clusterer options. Options for child cluster objects are set with the "cluster" prefix.
     * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/Clusterer.html#Clusterer__param-options}
     */
    options?: ymaps.IClustererOptions;
    /**
     * Clusterer instance is added to a Map. This event runs outside an Angular zone.
     */
    ready: EventEmitter<YaReadyEvent<ymaps.Clusterer>>;
    /**
     * Closing the hint.
     * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/Clusterer.html#event_detail__event-hintclose}
     */
    hintclose: Observable<YaEvent<ymaps.Clusterer>>;
    /**
     * Opening a hint on a map.
     * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/Clusterer.html#event_detail__event-hintopen}
     */
    hintopen: Observable<YaEvent<ymaps.Clusterer>>;
    /**
     * Map reference changed.
     * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/IParentOnMap.html#event_detail__event-mapchange}
     */
    mapchange: Observable<YaEvent<ymaps.Clusterer>>;
    /**
     * Change to the object options.
     * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/ICustomizable.html#event_detail__event-optionschange}
     */
    optionschange: Observable<YaEvent<ymaps.Clusterer>>;
    /**
     * The parent object reference changed.
     * {@link https://yandex.com/dev/maps/jsapi/doc/2.1/ref/reference/IChild.html#event_detail__event-parentchange}
     */
    parentchange: Observable<YaEvent<ymaps.Clusterer>>;
    constructor(ngZone: NgZone, yaMapComponent: YaMapComponent);
    /**
     * Handles input changes and passes them in API.
     * @param changes
     */
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    /**
     * Creates Clusterer.
     */
    private createClusterer;
    private watchForPlacemarkChanges;
    private watchForGeoObjectChanges;
    /**
     * Determines what should be added/removed in current set to equal new set
     *
     * @param newSet
     * @param currentSet
     */
    private getDifference;
    private getInternalPlacemarks;
    private getInternalGeoObjects;
    static ɵfac: i0.ɵɵFactoryDeclaration<YaClustererComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<YaClustererComponent, "ya-clusterer", never, { "options": { "alias": "options"; "required": false; }; }, { "ready": "ready"; "hintclose": "hintclose"; "hintopen": "hintopen"; "mapchange": "mapchange"; "optionschange": "optionschange"; "parentchange": "parentchange"; }, ["placemarks", "geoObjects"], ["*"], false, never>;
}
