import { NgZone } from '@angular/core';
import { Observable } from 'rxjs';
import { YaApiLoaderService } from '../ya-api-loader/ya-api-loader.service';
import * as i0 from "@angular/core";
/**
 * The `YaGeocoder` service wraps `ymaps.geocode` static function from the Yandex.Maps API.
 *
 * ```ts
 * import { YaGeocoderService } from 'angular8-yandex-maps';
 *
 * @Component()
 * export class AppComponent {
 *   constructor(private yaGeocoderService: YaGeocoderService) {
 *     // Don't forget to unsubscribe
 *     this.yaGeocoderService.geocode('Moscow')
 *       .subscribe(v => console.log(v))
 *   }
 * }
 * ```
 */
export declare class YaGeocoderService {
    private readonly ngZone;
    private readonly yaApiLoaderService;
    constructor(ngZone: NgZone, yaApiLoaderService: YaApiLoaderService);
    /**
     * Processes geocoding requests.
     * @param request the address for which coordinates need to be obtained (forward geocoding),
     * or the coordinates for which the address needs to be determined (reverse geocoding).
     * @param options geocode options.
     */
    geocode(request: string | number[], options?: ymaps.IGeocodeOptions): Observable<object>;
    static ɵfac: i0.ɵɵFactoryDeclaration<YaGeocoderService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<YaGeocoderService>;
}
